var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.61,1,1.007]],["body/components/AppComponent.html",[0,0.917,1,1.63,2,2.18,3,0.696,4,0.585,5,1.926,6,1.926,7,1.588,8,1.926,9,0.585,10,1.926,11,1.926,12,3.251,13,2.254,14,2.645,15,2.645,16,3.825,17,2.645,18,3.349,19,0.585,20,1.834,21,3.825,22,3.825,23,0.966,24,2.439,25,1.63,26,1.515,27,3.349,28,1.134,29,0.062,30,1.515,31,1.326,32,1.134,33,3.349,34,1.557,35,1.557,36,2.645,37,1.588,38,3.349,39,3.349,40,3.349,41,2.439,42,0.956,43,2.439,44,0.585,45,1.926,46,1.336,47,1.926,48,0.696,49,0.309,50,1.926,51,2.439,52,2.439,53,1.926,54,2.439,55,1.588,56,1.778,57,1.834,58,1.336,59,2.645,60,2.645,61,1.926,62,3.251,63,1.926,64,1.926,65,0.822,66,1.588,67,1.926,68,1.926,69,0.03,70,0.041,71,0.03]],["title/modules/AppModule.html",[72,1.392,73,1.392]],["body/modules/AppModule.html",[1,1.918,3,0.683,4,0.573,9,0.573,13,1.309,25,1.754,29,0.063,42,1.341,44,0.573,45,1.888,46,1.309,47,1.888,48,0.683,49,0.303,56,1.112,58,1.309,65,1.493,69,0.029,70,0.041,71,0.029,72,1.309,73,2.702,74,1.112,75,1.309,76,2.989,77,2.464,78,1.759,79,1.557,80,1.888,81,1.888,82,1.888,83,1.888,84,1.888,85,2.059,86,1.754,87,2.151,88,1.888,89,1.309,90,2.392,91,2.609,92,3.304,93,2.151,94,1.309,95,2.609,96,2.392,97,2.392,98,1.557,99,2.392,100,1.888,101,1.888,102,1.536,103,2.392,104,3.304,105,2.392]],["title/modules/AppRoutingModule.html",[72,1.392,85,1.182]],["body/modules/AppRoutingModule.html",[3,0.983,4,0.826,9,0.826,29,0.063,42,1.196,44,0.826,48,0.983,49,0.436,69,0.042,70,0.052,71,0.042,74,1.601,79,2.242,85,1.947,91,2.72,95,3.307,106,3.445,107,3.445,108,2.938,109,4.188,110,2.72,111,1.364,112,3.445]],["title/injectables/BingApiLoaderService.html",[25,1.007,113,0.726]],["body/injectables/BingApiLoaderService.html",[3,0.53,4,0.445,7,1.208,9,0.445,14,1.465,19,0.445,20,1.508,23,0.735,25,1.091,26,1.439,28,0.862,29,0.063,30,0.735,31,1.091,32,0.862,34,0.862,35,0.862,37,1.793,42,1.038,44,0.445,46,2.498,48,0.53,49,0.235,53,2.175,55,1.793,56,1.805,57,1.508,69,0.023,70,0.034,71,0.023,93,1.208,94,1.016,111,1.091,113,0.786,114,1.208,115,3.066,116,1.465,117,0.862,118,2.754,119,1.091,120,4.325,121,3.489,122,3.634,123,1.793,124,3.284,125,4.419,126,1.856,127,3.882,128,1.301,129,1.439,130,2.754,131,2.754,132,1.856,133,2.593,134,3.284,135,3.284,136,1.091,137,3.284,138,2.754,139,2.175,140,2.754,141,3.284,142,1.856,143,2.754,144,1.856,145,1.856,146,1.856,147,1.856,148,1.856,149,1.856,150,1.856,151,1.856,152,1.856,153,1.856,154,1.856,155,1.856,156,1.856,157,2.754,158,3.284,159,0.53,160,1.856,161,1.856,162,1.856,163,1.856,164,1.856,165,1.856,166,1.856,167,1.856,168,2.754,169,1.856,170,1.856,171,1.856,172,1.856,173,1.856,174,1.856,175,1.856,176,1.856,177,1.856,178,1.856,179,1.856,180,1.28,181,1.856,182,1.856,183,1.856]],["title/components/BingMapComponent.html",[0,0.61,65,0.857]],["body/components/BingMapComponent.html",[0,0.785,1,0.509,2,1.349,3,0.367,4,0.308,5,1.015,6,1.015,7,1.349,8,1.015,9,0.308,11,1.015,12,2.357,13,1.634,15,1.636,17,1.636,19,0.308,20,1.134,23,0.509,26,1.608,28,0.597,29,0.063,30,1.031,31,1.297,32,0.597,34,0.597,35,0.597,37,1.349,42,0.852,44,0.308,48,0.367,49,0.163,50,1.015,56,1.887,57,1.916,58,0.704,59,2.055,60,1.636,61,1.015,62,2.357,63,1.015,64,1.015,65,1.006,66,2.574,67,1.015,68,1.015,69,0.016,70,0.025,71,0.016,86,1.182,87,0.837,89,0.704,98,2.702,100,1.015,101,1.015,111,0.82,117,0.597,119,1.182,123,1.349,133,2.585,136,1.458,159,0.743,180,0.963,184,3.277,185,1.015,186,2.072,187,2.072,188,2.585,189,2.072,190,2.764,191,1.349,192,2.603,193,2.603,194,2.603,195,2.072,196,3.83,197,3.5,198,2.985,199,2.603,200,2.985,201,2.985,202,2.985,203,2.985,204,1.349,205,3.122,206,1.285,207,2.072,208,1.285,209,2.603,210,1.636,211,2.985,212,2.603,213,1.285,214,2.072,215,2.072,216,2.072,217,2.603,218,1.285,219,1.285,220,2.072,221,2.055,222,1.285,223,2.072,224,1.285,225,2.603,226,1.285,227,2.603,228,1.285,229,2.072,230,1.285,231,1.285,232,1.285,233,1.636,234,1.285,235,1.285,236,1.015,237,0.837,238,1.285,239,1.636,240,1.015,241,1.285,242,0.704,243,1.285,244,1.285,245,1.285,246,3.681,247,2.396,248,1.285,249,1.285,250,1.285,251,1.285,252,1.285,253,1.285,254,1.285,255,1.285,256,1.285,257,1.285,258,2.985,259,1.015,260,1.285,261,2.072,262,2.603,263,1.285,264,1.285,265,1.285,266,1.285,267,1.285,268,1.285,269,1.285,270,1.285,271,1.285,272,1.285,273,1.285,274,1.285,275,1.285,276,1.285,277,1.285,278,1.285,279,0.837,280,2.072,281,2.072]],["title/classes/BrowserWindowRef.html",[49,0.322,282,1.007]],["body/classes/BrowserWindowRef.html",[0,0.445,3,0.53,4,0.445,9,0.66,19,0.445,23,1.301,26,1.091,29,0.064,42,0.786,44,0.445,48,1.108,49,0.569,69,0.023,70,0.034,71,0.023,78,0.862,102,0.862,111,1.439,113,0.786,117,0.862,119,1.781,128,1.611,129,1.865,136,1.439,159,0.938,180,1.527,191,1.793,204,1.793,242,1.016,247,1.208,282,1.611,283,1.208,284,0.862,285,2.593,286,2.87,287,2.126,288,2.593,289,3.212,290,2.593,291,2.175,292,2.175,293,2.175,294,2.175,295,2.87,296,1.856,297,1.465,298,1.856,299,1.465,300,1.208,301,1.793,302,1.793,303,1.465,304,1.793,305,1.465,306,1.465,307,1.465,308,1.465,309,2.126,310,1.208,311,1.793,312,1.208,313,1.208,314,1.465,315,1.465,316,1.465,317,1.465,318,1.465,319,1.465,320,1.208,321,1.527,322,1.465,323,1.793,324,1.208,325,1.465,326,1.465,327,1.793,328,1.793,329,1.508,330,1.793,331,1.208,332,1.28,333,1.208,334,1.508,335,1.208,336,1.208,337,1.208]],["title/injectables/SiteConditionsService.html",[86,1.007,113,0.726]],["body/injectables/SiteConditionsService.html",[3,0.55,4,0.462,9,0.462,19,0.462,20,1.55,23,1.33,26,1.633,28,0.896,29,0.064,30,0.763,31,0.763,32,0.896,34,1.72,35,1.72,42,1.057,44,0.462,48,0.55,49,0.244,65,0.649,66,1.254,69,0.024,70,0.035,71,0.024,86,1.121,111,0.763,113,0.809,114,1.254,117,1.316,121,2.236,123,1.844,136,1.121,139,1.521,159,1.057,180,0.896,188,2.923,190,2.651,205,3.711,221,2.236,233,2.236,236,2.651,237,1.254,239,1.521,240,1.521,242,1.055,259,1.521,338,3.365,339,1.521,340,2.832,341,3.701,342,2.923,343,4.262,344,4.123,345,2.832,346,2.832,347,2.236,348,2.832,349,2.832,350,2.832,351,2.832,352,1.927,353,2.832,354,2.832,355,2.832,356,2.832,357,3.358,358,2.832,359,3.358,360,1.927,361,2.832,362,1.927,363,2.832,364,1.927,365,2.832,366,1.927,367,1.927,368,1.927,369,1.927,370,1.927,371,1.927,372,1.927,373,1.927,374,1.927,375,1.927,376,2.832,377,1.927,378,1.927,379,1.927,380,1.927,381,1.927]],["title/classes/WindowRef.html",[49,0.322,128,1.007]],["body/classes/WindowRef.html",[0,0.46,3,0.548,4,0.46,9,0.677,19,0.46,23,0.76,26,0.76,29,0.064,42,0.806,44,0.46,48,1.124,49,0.553,69,0.024,70,0.035,71,0.024,78,0.892,102,0.892,111,1.463,113,0.806,117,0.892,119,1.795,128,1.63,129,1.876,136,1.326,159,0.956,180,1.557,191,1.249,204,1.838,242,1.545,247,1.249,282,1.559,283,1.249,284,0.892,285,2.644,286,2.916,287,2.022,288,2.229,289,2.916,290,2.229,291,1.515,292,1.515,293,1.515,294,1.515,295,2.916,297,1.515,299,1.515,300,1.249,301,1.838,302,1.838,303,1.515,304,1.838,305,1.515,306,1.515,307,1.515,308,1.515,309,2.155,310,1.249,311,1.838,312,1.249,313,1.249,314,2.229,315,2.229,316,1.515,317,1.515,318,1.515,319,1.515,320,1.249,321,1.557,322,1.515,323,1.838,324,1.249,325,1.515,326,1.515,327,1.838,328,1.838,329,1.545,330,1.838,331,1.249,332,1.312,333,1.249,334,1.545,335,1.249,336,1.249,337,1.249,382,1.918]],["title/coverage.html",[383,2.721]],["body/coverage.html",[0,0.879,1,1.105,9,0.669,10,2.204,25,1.105,29,0.062,31,1.105,46,1.528,49,0.464,65,0.941,69,0.034,70,0.045,71,0.034,86,1.105,98,1.817,102,1.297,113,1.047,115,2.204,116,2.204,128,1.105,129,1.105,159,0.797,184,2.204,185,2.204,279,2.665,282,1.105,284,2.196,321,1.297,329,1.528,332,1.297,334,1.528,338,2.204,339,2.204,383,2.204,384,2.791,385,2.791,386,2.791,387,2.791,388,3.666,389,2.791,390,2.791,391,2.791,392,2.791,393,2.791,394,2.791,395,4.635,396,4.635,397,4.635,398,2.204,399,2.895,400,3.666,401,2.204,402,2.791,403,2.791]],["title/dependencies.html",[75,1.671,404,2.136]],["body/dependencies.html",[29,0.063,44,0.739,69,0.038,70,0.048,71,0.038,75,1.688,77,2.007,93,2.545,94,2.14,110,2.435,237,2.007,300,2.007,405,3.083,406,3.083,407,3.083,408,3.083,409,4.893,410,3.083,411,3.91,412,3.083,413,3.083,414,3.083,415,3.083,416,3.083,417,3.083,418,3.083,419,3.083,420,3.083,421,3.083,422,3.083,423,3.083,424,3.083,425,3.083,426,3.083,427,3.083,428,3.083,429,3.083,430,3.083]],["title/miscellaneous/functions.html",[431,1.17,432,2.41]],["body/miscellaneous/functions.html",[19,0.839,28,1.627,29,0.059,30,1.387,32,1.627,69,0.043,70,0.052,71,0.043,119,1.8,129,1.8,136,1.675,282,1.387,284,1.627,287,2.316,309,1.917,320,2.279,321,1.627,323,2.754,324,2.279,332,1.966,431,1.917,432,2.765,433,2.765]],["title/index.html",[19,0.512,342,1.687,434,2.136]],["body/index.html",[0,0.951,4,0.628,13,1.434,29,0.043,30,1.037,56,1.218,57,1.434,69,0.032,70,0.043,71,0.032,89,1.434,159,0.748,210,2.068,347,3.672,435,2.619,436,3.967,437,2.619,438,4.24,439,3.967,440,2.619,441,2.619,442,2.619,443,2.619,444,2.619,445,2.619,446,2.619,447,2.619,448,2.619,449,2.619,450,2.619,451,4.553,452,2.619,453,2.619,454,2.619,455,2.619,456,3.515,457,4.651,458,2.619,459,2.619,460,2.619,461,2.619,462,2.619,463,2.619,464,2.619,465,2.619,466,2.619,467,2.619,468,3.967,469,3.967,470,2.619,471,2.619,472,2.619,473,2.619,474,2.619,475,2.619,476,2.619,477,2.068,478,3.515,479,3.515,480,4.24,481,2.619,482,3.515,483,3.515,484,2.619,485,4.24,486,2.619,487,2.619,488,2.619,489,3.967,490,2.619,491,2.619,492,2.619,493,2.619]],["title/modules.html",[74,1.602]],["body/modules.html",[29,0.055,69,0.047,70,0.055,71,0.047,73,2.088,74,1.773,85,1.773,94,2.088,494,3.814,495,3.814,496,4.45,497,3.814,498,3.814]],["title/overview.html",[499,2.721]],["body/overview.html",[1,1.913,2,2,25,1.697,29,0.06,58,1.682,65,1.445,69,0.038,70,0.048,71,0.038,72,1.682,73,2.767,74,1.428,75,1.682,76,2.426,77,2,78,1.428,79,2,80,2.426,81,2.426,82,2.426,83,2.426,84,2.426,85,1.992,86,1.697,87,2.539,88,2.426,89,1.682,114,2,279,2,283,2,499,2.426,500,4.509]],["title/routes.html",[108,2.243]],["body/routes.html",[29,0.056,69,0.049,70,0.056,71,0.049,108,2.587]],["title/miscellaneous/variables.html",[431,1.17,501,2.41]],["body/miscellaneous/variables.html",[0,0.62,19,0.62,29,0.063,31,1.744,34,2.109,35,2.109,36,2.043,49,0.328,55,1.684,69,0.032,70,0.043,71,0.032,78,1.203,102,1.62,113,0.995,119,1.561,128,1.561,129,1.744,159,0.995,282,1.381,284,1.203,287,1.417,301,1.684,302,1.684,304,1.684,309,2.31,310,1.684,311,2.269,312,1.684,313,1.684,321,1.203,327,2.269,328,2.269,329,2.158,330,2.269,331,1.684,332,1.62,333,1.684,334,2.158,335,1.684,336,1.684,337,1.684,398,2.043,399,3.331,401,2.043,431,1.417,433,3.331,477,2.753,501,2.043,502,2.588,503,2.588]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":279,"title":{},"body":{"components/BingMapComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.1",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["0.12714",{"_index":274,"title":{},"body":{"components/BingMapComponent.html":{}}}],["0.8.26",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":277,"title":{},"body":{"components/BingMapComponent.html":{}}}],["100",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":500,"title":{},"body":{"overview.html":{}}}],["2.0.3",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["4.3.1",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["41.49871231510167",{"_index":380,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["42",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["7.3.9",{"_index":441,"title":{},"body":{"index.html":{}}}],["72.95581850473526",{"_index":359,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["abstract",{"_index":286,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["accessors",{"_index":204,"title":{},"body":{"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["actual_component",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["afterviewinit",{"_index":193,"title":{},"body":{"components/BingMapComponent.html":{}}}],["agm/core",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["alden",{"_index":288,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["already",{"_index":182,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["always",{"_index":179,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["angular",{"_index":438,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":300,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":367,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["angular/compiler",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"injectables/BingApiLoaderService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BingApiLoaderService.html":{},"coverage.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BingMapComponent.html":{},"index.html":{}}}],["app.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BingMapComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":73,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":85,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":337,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":471,"title":{},"body":{"index.html":{}}}],["aukhsv0yxizqnvbys4szic5rfgemkxhaslcmrz5pv8umgqwi11uh2mo5_swdh8l8",{"_index":272,"title":{},"body":{"components/BingMapComponent.html":{}}}],["automatically",{"_index":462,"title":{},"body":{"index.html":{}}}],["available",{"_index":498,"title":{},"body":{"modules.html":{}}}],["before",{"_index":446,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":236,"title":{},"body":{"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["behaviorsubject(0",{"_index":363,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["behaviorsubject([41.49871231510167",{"_index":358,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["beta.5",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["bing",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"index.html":{}}}],["bingapiloader",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["bingapiloaderservice",{"_index":25,"title":{"injectables/BingApiLoaderService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BingApiLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["bingmapcomponent",{"_index":65,"title":{"components/BingMapComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{},"coverage.html":{},"overview.html":{}}}],["bingmaps",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["bioseer",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["bioseerwebinterface",{"_index":435,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":218,"title":{},"body":{"components/BingMapComponent.html":{}}}],["bootstrap",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["browse",{"_index":496,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/BingApiLoaderService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["browserwindowprovider",{"_index":329,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["browserwindowref",{"_index":282,"title":{"classes/BrowserWindowRef.html":{}},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["browserwindowref.nativewindow",{"_index":326,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["build",{"_index":451,"title":{},"body":{"index.html":{}}}],["built",{"_index":442,"title":{},"body":{"index.html":{}}}],["callback",{"_index":162,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["called",{"_index":157,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["center",{"_index":205,"title":{},"body":{"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["centered",{"_index":187,"title":{},"body":{"components/BingMapComponent.html":{}}}],["change",{"_index":464,"title":{},"body":{"index.html":{}}}],["check",{"_index":492,"title":{},"body":{"index.html":{}}}],["class",{"_index":49,"title":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":283,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"overview.html":{}}}],["classprovider",{"_index":301,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["cli",{"_index":439,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":466,"title":{},"body":{"index.html":{}}}],["come",{"_index":379,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["compodoc",{"_index":445,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{},"overview.html":{}}}],["conditions",{"_index":340,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["conditions.service",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"components/BingMapComponent.html":{}}}],["conditions.service.ts",{"_index":339,"title":{},"body":{"injectables/SiteConditionsService.html":{},"coverage.html":{}}}],["conditions.service.ts:12",{"_index":360,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["conditions.service.ts:13",{"_index":364,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["conditions.service.ts:15",{"_index":362,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["conditions.service.ts:16",{"_index":346,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["conditions.service.ts:38",{"_index":352,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["console.log('map",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{}}}],["constructor(@inject(document",{"_index":153,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["constructor(bingapiloader",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(documentref",{"_index":126,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["constructor(private",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["constructor(service",{"_index":206,"title":{},"body":{"components/BingMapComponent.html":{}}}],["coordinates",{"_index":188,"title":{},"body":{"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["coords",{"_index":258,"title":{},"body":{"components/BingMapComponent.html":{}}}],["core",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":383,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":309,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":133,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{}}}],["createstreetsidemap",{"_index":200,"title":{},"body":{"components/BingMapComponent.html":{}}}],["creating",{"_index":186,"title":{},"body":{"components/BingMapComponent.html":{}}}],["credentials",{"_index":271,"title":{},"body":{"components/BingMapComponent.html":{}}}],["data",{"_index":353,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["declarations",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":228,"title":{},"body":{"components/BingMapComponent.html":{}}}],["default",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":285,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{}}}],["delay",{"_index":369,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["dependencies",{"_index":75,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":149,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["deps",{"_index":336,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":117,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{}}}],["dev",{"_index":459,"title":{},"body":{"index.html":{}}}],["development",{"_index":455,"title":{},"body":{"index.html":{}}}],["directive",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["directives",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":470,"title":{},"body":{"index.html":{}}}],["directory",{"_index":474,"title":{},"body":{"index.html":{}}}],["dist",{"_index":473,"title":{},"body":{"index.html":{}}}],["doc",{"_index":450,"title":{},"body":{"index.html":{}}}],["docs",{"_index":452,"title":{},"body":{"index.html":{}}}],["document",{"_index":127,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["document.createelement('script",{"_index":169,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["documentation",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":444,"title":{},"body":{"index.html":{}}}],["documentref",{"_index":131,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["documentref.getelementsbytagname('head')[0].appendchild(node",{"_index":177,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["doesn't",{"_index":139,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"injectables/SiteConditionsService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{}}}],["don't",{"_index":290,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["dynamic",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":486,"title":{},"body":{"index.html":{}}}],["element",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["elementref",{"_index":227,"title":{},"body":{"components/BingMapComponent.html":{}}}],["empty",{"_index":255,"title":{},"body":{"components/BingMapComponent.html":{}}}],["end",{"_index":485,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":152,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["entry",{"_index":281,"title":{},"body":{"components/BingMapComponent.html":{}}}],["environment",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error('not",{"_index":317,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["ev",{"_index":166,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["execute",{"_index":482,"title":{},"body":{"index.html":{}}}],["exists",{"_index":215,"title":{},"body":{"components/BingMapComponent.html":{}}}],["export",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{}}}],["exports",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":294,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["extensions",{"_index":293,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["factory",{"_index":320,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/functions.html":{}}}],["factoryprovider",{"_index":302,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"coverage.html":{}}}],["files",{"_index":465,"title":{},"body":{"index.html":{}}}],["filter",{"_index":238,"title":{},"body":{"components/BingMapComponent.html":{}}}],["filter(coords",{"_index":257,"title":{},"body":{"components/BingMapComponent.html":{}}}],["filters",{"_index":254,"title":{},"body":{"components/BingMapComponent.html":{}}}],["first",{"_index":155,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["flag",{"_index":476,"title":{},"body":{"index.html":{}}}],["from([center]).pipe(delay(2000",{"_index":381,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["function",{"_index":321,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":432,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":488,"title":{},"body":{"index.html":{}}}],["generate",{"_index":468,"title":{},"body":{"index.html":{}}}],["generated",{"_index":437,"title":{},"body":{"index.html":{}}}],["getcenter",{"_index":231,"title":{},"body":{"components/BingMapComponent.html":{}}}],["getinitialcenter",{"_index":345,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["getinitialcenter(reportid",{"_index":351,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["getnativewindow",{"_index":297,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["gets",{"_index":233,"title":{},"body":{"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["getting",{"_index":342,"title":{"index.html":{}},"body":{"injectables/SiteConditionsService.html":{}}}],["github",{"_index":453,"title":{},"body":{"index.html":{}}}],["given",{"_index":189,"title":{},"body":{"components/BingMapComponent.html":{}}}],["global",{"_index":315,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["go",{"_index":491,"title":{},"body":{"index.html":{}}}],["graph",{"_index":497,"title":{},"body":{"modules.html":{}}}],["hammerjs",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["handles",{"_index":305,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["haslogentries",{"_index":201,"title":{},"body":{"components/BingMapComponent.html":{}}}],["heading",{"_index":344,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["help",{"_index":489,"title":{},"body":{"index.html":{}}}],["html",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["http",{"_index":343,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["http://localhost:4200",{"_index":461,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":366,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["https://www.bing.com/api/maps/mapcontrol?callback=__onbingloaded&key=aukhsv0yxizqnvbys4szic5rfgemkxhaslcmrz5pv8umgqwi11uh2mo5_swdh8l8",{"_index":143,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["id",{"_index":355,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["identifier",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":247,"title":{},"body":{"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["implemented",{"_index":318,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["implements",{"_index":191,"title":{},"body":{"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{}}}],["imports",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incorporated",{"_index":443,"title":{},"body":{"index.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{}}}],["initial",{"_index":350,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["inject",{"_index":144,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["inject(window",{"_index":154,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["injectable",{"_index":113,"title":{"injectables/BingApiLoaderService.html":{},"injectables/SiteConditionsService.html":{}},"body":{"injectables/BingApiLoaderService.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":114,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"injectables/SiteConditionsService.html":{},"overview.html":{}}}],["injecting",{"_index":312,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":310,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":303,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["injectiontoken('windowtoken",{"_index":313,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":234,"title":{},"body":{"components/BingMapComponent.html":{}}}],["interface",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["isplatformbrowser",{"_index":299,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["isplatformbrowser(platformid",{"_index":325,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["it'll",{"_index":216,"title":{},"body":{"components/BingMapComponent.html":{}}}],["it's",{"_index":148,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["js",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":484,"title":{},"body":{"index.html":{}}}],["know",{"_index":289,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["lat",{"_index":261,"title":{},"body":{"components/BingMapComponent.html":{}}}],["legend",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BingMapComponent.html":{},"overview.html":{}}}],["lifecycle",{"_index":280,"title":{},"body":{"components/BingMapComponent.html":{}}}],["link",{"_index":371,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["literal",{"_index":164,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["load",{"_index":125,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["loaded",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{}}}],["loader.service",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["loader.service.ts",{"_index":116,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:13",{"_index":142,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["loader.service.ts:14",{"_index":130,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["loader.service.ts:22",{"_index":132,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["loads",{"_index":118,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["log",{"_index":196,"title":{},"body":{"components/BingMapComponent.html":{}}}],["lon",{"_index":262,"title":{},"body":{"components/BingMapComponent.html":{}}}],["look",{"_index":291,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["make",{"_index":137,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["many",{"_index":181,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["map",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["map.component",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["map.component.html",{"_index":195,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map.component.scss",{"_index":194,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map.component.ts",{"_index":185,"title":{},"body":{"components/BingMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:20",{"_index":230,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map.component.ts:26",{"_index":232,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map.component.ts:31",{"_index":226,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map.component.ts:33",{"_index":224,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map.component.ts:36",{"_index":207,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map.component.ts:42",{"_index":222,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map.component.ts:49",{"_index":219,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map.component.ts:71",{"_index":208,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map.component.ts:90",{"_index":213,"title":{},"body":{"components/BingMapComponent.html":{}}}],["map/bing",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"components/BingMapComponent.html":{},"coverage.html":{}}}],["maploaded",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["maps",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"index.html":{}}}],["maptypeid",{"_index":275,"title":{},"body":{"components/BingMapComponent.html":{}}}],["master",{"_index":448,"title":{},"body":{"index.html":{}}}],["matching",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["methods",{"_index":123,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["microsoft",{"_index":211,"title":{},"body":{"components/BingMapComponent.html":{}}}],["microsoft.maps.location",{"_index":223,"title":{},"body":{"components/BingMapComponent.html":{}}}],["microsoft.maps.location(51.50632",{"_index":273,"title":{},"body":{"components/BingMapComponent.html":{}}}],["microsoft.maps.location(lat",{"_index":264,"title":{},"body":{"components/BingMapComponent.html":{}}}],["microsoft.maps.map",{"_index":225,"title":{},"body":{"components/BingMapComponent.html":{}}}],["microsoft.maps.maptypeid.aerial",{"_index":276,"title":{},"body":{"components/BingMapComponent.html":{}}}],["miscellaneous",{"_index":431,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mocks",{"_index":341,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["module",{"_index":72,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":74,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":490,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":140,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["native",{"_index":287,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nativewindow",{"_index":295,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["navigate",{"_index":460,"title":{},"body":{"index.html":{}}}],["needed",{"_index":241,"title":{},"body":{"components/BingMapComponent.html":{}}}],["new",{"_index":159,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":457,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":202,"title":{},"body":{"components/BingMapComponent.html":{}}}],["ngmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":203,"title":{},"body":{"components/BingMapComponent.html":{}}}],["node",{"_index":168,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["node.async",{"_index":175,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["node.defer",{"_index":176,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["node.src",{"_index":171,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["node.type",{"_index":173,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["npm",{"_index":449,"title":{},"body":{"index.html":{}}}],["object",{"_index":119,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":357,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["obtaining",{"_index":314,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["onchanges",{"_index":192,"title":{},"body":{"components/BingMapComponent.html":{}}}],["one",{"_index":256,"title":{},"body":{"components/BingMapComponent.html":{}}}],["oninit",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["operations",{"_index":307,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"components/BingMapComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":248,"title":{},"body":{"components/BingMapComponent.html":{}}}],["overview",{"_index":499,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":404,"title":{"dependencies.html":{}},"body":{}}],["pages",{"_index":454,"title":{},"body":{"index.html":{}}}],["param",{"_index":378,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":322,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["platform_id",{"_index":304,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["platformid",{"_index":323,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/functions.html":{}}}],["position",{"_index":197,"title":{},"body":{"components/BingMapComponent.html":{}}}],["printed",{"_index":217,"title":{},"body":{"components/BingMapComponent.html":{}}}],["private",{"_index":120,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["prod",{"_index":475,"title":{},"body":{"index.html":{}}}],["production",{"_index":477,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["program",{"_index":348,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["project",{"_index":436,"title":{},"body":{"index.html":{}}}],["promise",{"_index":121,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"injectables/SiteConditionsService.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["protractor",{"_index":487,"title":{},"body":{"index.html":{}}}],["provide",{"_index":330,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":151,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["provider",{"_index":327,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":124,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["push",{"_index":447,"title":{},"body":{"index.html":{}}}],["readme",{"_index":493,"title":{},"body":{"index.html":{}}}],["refactor",{"_index":146,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["reference",{"_index":242,"title":{},"body":{"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{}}}],["references",{"_index":244,"title":{},"body":{"components/BingMapComponent.html":{}}}],["referencing",{"_index":306,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["reload",{"_index":463,"title":{},"body":{"index.html":{}}}],["reportid",{"_index":354,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["request",{"_index":356,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["research",{"_index":308,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["reset",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve",{"_index":160,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["resolve('bing",{"_index":167,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["resolved",{"_index":183,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["result",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":180,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{}}}],["returning",{"_index":333,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":136,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"miscellaneous/functions.html":{}}}],["rid",{"_index":147,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{}}}],["root'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["routermodule",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":108,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":347,"title":{},"body":{"injectables/SiteConditionsService.html":{},"index.html":{}}}],["running",{"_index":478,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":237,"title":{},"body":{"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":240,"title":{},"body":{"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["scaffolding",{"_index":467,"title":{},"body":{"index.html":{}}}],["script",{"_index":134,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["serve",{"_index":458,"title":{},"body":{"index.html":{}}}],["server",{"_index":456,"title":{},"body":{"index.html":{}}}],["service",{"_index":190,"title":{},"body":{"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["services/bing",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["services/site",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"components/BingMapComponent.html":{}}}],["services/window.service",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":161,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["sets",{"_index":221,"title":{},"body":{"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["siteconditionsservice",{"_index":86,"title":{"injectables/SiteConditionsService.html":{}},"body":{"modules/AppModule.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{},"coverage.html":{},"overview.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"classes/BrowserWindowRef.html":{},"injectables/SiteConditionsService.html":{},"classes/WindowRef.html":{},"index.html":{}}}],["src/.../environment.prod.ts",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../window.service.ts",{"_index":433,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/bing",{"_index":184,"title":{},"body":{"components/BingMapComponent.html":{},"coverage.html":{}}}],["src/app/services/bing",{"_index":115,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"coverage.html":{}}}],["src/app/services/site",{"_index":338,"title":{},"body":{"injectables/SiteConditionsService.html":{},"coverage.html":{}}}],["src/app/services/window.service.ts",{"_index":284,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/window.service.ts:16",{"_index":382,"title":{},"body":{"classes/WindowRef.html":{}}}],["src/app/services/window.service.ts:26",{"_index":296,"title":{},"body":{"classes/BrowserWindowRef.html":{}}}],["src/app/services/window.service.ts:32",{"_index":298,"title":{},"body":{"classes/BrowserWindowRef.html":{}}}],["src/environments/environment.prod.ts",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":434,"title":{"index.html":{}},"body":{}}],["startup",{"_index":349,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["statements",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":472,"title":{},"body":{"index.html":{}}}],["streestide",{"_index":220,"title":{},"body":{"components/BingMapComponent.html":{}}}],["streetside",{"_index":209,"title":{},"body":{"components/BingMapComponent.html":{}}}],["streetsidemap",{"_index":198,"title":{},"body":{"components/BingMapComponent.html":{}}}],["streetsidemapviewchild",{"_index":199,"title":{},"body":{"components/BingMapComponent.html":{}}}],["string",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["subscribe(coords",{"_index":260,"title":{},"body":{"components/BingMapComponent.html":{}}}],["subscribe(initialcenter",{"_index":375,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["super",{"_index":319,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["support",{"_index":494,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":138,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["svg",{"_index":495,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":368,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["switchmap(params",{"_index":373,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["table",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":135,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["take",{"_index":239,"title":{},"body":{"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["take(1",{"_index":259,"title":{},"body":{"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["test",{"_index":481,"title":{},"body":{"index.html":{}}}],["tests",{"_index":480,"title":{},"body":{"index.html":{}}}],["text/javascript",{"_index":174,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["this.bingapiloader.load().then",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["this.center.asobservable",{"_index":361,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["this.center.next(initialcenter",{"_index":376,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["this.createstreetsidemap",{"_index":252,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.documentref.createelement('script",{"_index":170,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["this.documentref.getelementsbytagname('head')[0].appendchild(node",{"_index":178,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["this.getinitialcenter(+params.id",{"_index":374,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["this.getinitialcenter(0).subscribe(initialcenter",{"_index":377,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["this.heading.asobservable",{"_index":365,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["this.log.length",{"_index":278,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.log.push('afterviewinit",{"_index":251,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.log.push('constructor",{"_index":249,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.log.push('onchanges",{"_index":250,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.log.push(`current",{"_index":267,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.log.push(`got",{"_index":263,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.maploaded",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["this.promise",{"_index":158,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["this.route.params.pipe",{"_index":372,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["this.service.center",{"_index":245,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.service.center$.pipe",{"_index":253,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.streetsidemap",{"_index":269,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.streetsidemap.getcenter",{"_index":268,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.streetsidemap.setview",{"_index":266,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.streetsidemapviewchild.nativeelement",{"_index":270,"title":{},"body":{"components/BingMapComponent.html":{}}}],["this.url",{"_index":172,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["this.windowref['__onbingloaded",{"_index":165,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["throw",{"_index":316,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["time",{"_index":156,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["times",{"_index":141,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":145,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["token",{"_index":311,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["true",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":246,"title":{},"body":{"components/BingMapComponent.html":{}}}],["tslib",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable:no",{"_index":163,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/bingmaps",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":243,"title":{},"body":{"components/BingMapComponent.html":{}}}],["unit",{"_index":479,"title":{},"body":{"index.html":{}}}],["up",{"_index":292,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{}}}],["url",{"_index":122,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["use",{"_index":469,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":331,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":335,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":328,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":210,"title":{},"body":{"components/BingMapComponent.html":{},"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/BingApiLoaderService.html":{},"components/BingMapComponent.html":{},"injectables/SiteConditionsService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BingMapComponent.html":{}}}],["variable",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":501,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":440,"title":{},"body":{"index.html":{}}}],["via",{"_index":483,"title":{},"body":{"index.html":{}}}],["view",{"_index":265,"title":{},"body":{"components/BingMapComponent.html":{}}}],["viewchild",{"_index":235,"title":{},"body":{"components/BingMapComponent.html":{}}}],["viewchild('streetsidemap",{"_index":229,"title":{},"body":{"components/BingMapComponent.html":{}}}],["void",{"_index":212,"title":{},"body":{"components/BingMapComponent.html":{}}}],["web",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["whether",{"_index":214,"title":{},"body":{"components/BingMapComponent.html":{}}}],["window",{"_index":129,"title":{},"body":{"injectables/BingApiLoaderService.html":{},"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["window.service",{"_index":150,"title":{},"body":{"injectables/BingApiLoaderService.html":{}}}],["window_providers",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["windowfactory",{"_index":332,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["windowfactory(browserwindowref",{"_index":324,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"miscellaneous/functions.html":{}}}],["windowprovider",{"_index":334,"title":{},"body":{"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["windowref",{"_index":128,"title":{"classes/WindowRef.html":{}},"body":{"injectables/BingApiLoaderService.html":{},"classes/BrowserWindowRef.html":{},"classes/WindowRef.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["work",{"_index":370,"title":{},"body":{"injectables/SiteConditionsService.html":{}}}],["zone.js",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"components/BingMapComponent.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mapLoaded\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bingApiLoader: BingApiLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bingApiLoader\n                                                  \n                                                        \n                                                                        BingApiLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Bioseer-Web-Interface'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {BingApiLoaderService} from './services/bing-api-loader.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Bioseer-Web-Interface';\n  mapLoaded = false;\n\n  constructor(private bingApiLoader: BingApiLoaderService) {\n    this.bingApiLoader.load().then(() => {\n      console.log('map loaded');\n      this.mapLoaded = true;\n    });\n  }\n}\n\n    \n\n    \n        Bing Maps:\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Bing Maps:'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BingMapComponent', 'selector': 'app-bing-map'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBingMapComponent\n\nBingMapComponent\n\nAppModule -->\n\nBingMapComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBingApiLoaderService\n\nBingApiLoaderService\n\nAppModule -->\n\nBingApiLoaderService->AppModule\n\n\n\n\n\nSiteConditionsService\n\nSiteConditionsService\n\nAppModule -->\n\nSiteConditionsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BingMapComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BingApiLoaderService\n                        \n                        \n                            SiteConditionsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BingMapComponent } from './bing-map/bing-map.component';\nimport {SiteConditionsService} from './services/site-conditions.service';\nimport {WINDOW_PROVIDERS} from './services/window.service';\nimport {BingApiLoaderService} from './services/bing-api-loader.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BingMapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  bootstrap: [AppComponent],\n  providers: [ SiteConditionsService, WINDOW_PROVIDERS, BingApiLoaderService ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BingApiLoaderService.html":{"url":"injectables/BingApiLoaderService.html","title":"injectable - BingApiLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BingApiLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/bing-api-loader.service.ts\n        \n\n            \n                Description\n            \n            \n                Loads the bing api object\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                promise\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(documentRef: Document, windowRef: Window)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/bing-api-loader.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        documentRef\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowRef\n                                                  \n                                                        \n                                                                    Window\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bing-api-loader.service.ts:22\n                \n            \n\n\n            \n                \n                    Creates the script tag for the bing api\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        promise to make sure it doesn't load multiple times\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/bing-api-loader.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://www.bing.com/api/maps/mapcontrol?callback=__onBingLoaded&key=AukHSv0yxiZQnvbYs4szic5RfGEmKxhaSLCmRZ5PV8UmgQWI11uH2Mo5_sWDh8l8'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/bing-api-loader.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\n// TODO Refactor to get rid of this Document import, it's deprecated\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { WINDOW } from './window.service';\n\n/**\n * Loads the bing api object\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BingApiLoaderService {\n  private promise;\n  private url = 'https://www.bing.com/api/maps/mapcontrol?callback=__onBingLoaded&key=AukHSv0yxiZQnvbYs4szic5RfGEmKxhaSLCmRZ5PV8UmgQWI11uH2Mo5_sWDh8l8'; // URL to API Endpoint\n\n  constructor(@Inject(DOCUMENT) private documentRef: Document, @Inject(WINDOW) private windowRef: Window) {}\n\n  /**\n   * Creates the script tag for the bing api\n   * @returns promise to make sure it doesn't load multiple times\n   */\n  public load() {\n    // First time 'load' is called?\n    if (!this.promise) {\n\n      // Make promise to load\n      this.promise = new Promise( resolve => {\n\n        // Set callback for when bing maps is loaded.\n        /* tslint:disable:no-string-literal */\n        this.windowRef['__onBingLoaded'] = (ev) => {\n          resolve('Bing Maps API loaded');\n        };\n\n        // Creates DOM script tag\n        // const node = document.createElement('script');\n        const node = this.documentRef.createElement('script');\n        node.src = this.url;\n        node.type = 'text/javascript';\n        node.async = true;\n        node.defer = true;\n        // documentRef.getElementsByTagName('head')[0].appendChild(node);\n        this.documentRef.getElementsByTagName('head')[0].appendChild(node);\n      });\n    }\n\n    // Always return promise. When 'load' is called many times, the promise is already resolved.\n    return this.promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BingMapComponent.html":{"url":"components/BingMapComponent.html","title":"component - BingMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BingMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/bing-map/bing-map.component.ts\n\n\n    \n        Description\n    \n    \n        Component for creating bing maps centered on the coordinates given from the service\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bing-map\n            \n\n            \n                styleUrls\n                ./bing-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bing-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                            \n                                position\n                            \n                            \n                                streetsideMap\n                            \n                            \n                                streetsideMapViewChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStreetSideMap\n                            \n                            \n                                hasLogEntries\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    center\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SiteConditionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/bing-map/bing-map.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SiteConditionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStreetSideMap\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStreetSideMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/bing-map/bing-map.component.ts:71\n                \n            \n\n\n            \n                \n                    Creates streetside maps using Microsoft maps object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasLogEntries\n                        \n                        \n                    \n                \n            \n            \n                \nhasLogEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/bing-map/bing-map.component.ts:90\n                \n            \n\n\n            \n                \n                    Returns whether or not the log exists, if it does, it'll be printed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/bing-map/bing-map.component.ts:49\n                \n            \n\n\n            \n                \n                    Creates streestide map, sets coordinates\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/bing-map/bing-map.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/bing-map/bing-map.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Microsoft.Maps.Location\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/bing-map/bing-map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streetsideMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Microsoft.Maps.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/bing-map/bing-map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streetsideMapViewChild\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('streetsideMap')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/bing-map/bing-map.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n\n                \n                    \n                        getcenter()\n                    \n                \n                            \n                                \n                                    Defined in src/app/bing-map/bing-map.component.ts:26\n                                \n                            \n                    \n                        \n                                Gets center of the map\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, Input, OnChanges, ViewChild } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { SiteConditionsService } from '../services/site-conditions.service';\n\n// Needed to reference typescript for microsoft object\n/// \n\n/**\n * Component for creating bing maps centered on the coordinates given from the service\n */\n@Component({\n  selector: 'app-bing-map',\n  templateUrl: './bing-map.component.html',\n  styleUrls: ['./bing-map.component.scss']\n})\nexport class BingMapComponent implements OnChanges, AfterViewInit  {\n\n  // References streetsideMap on the DOM\n  @ViewChild('streetsideMap') streetsideMapViewChild: ElementRef;\n\n  /**\n   * Gets center of the map\n   * @returns Center of map\n   */\n  get center() {\n    return this.service.center$;\n  }\n\n  // @ts-ignore\n  streetsideMap: Microsoft.Maps.Map;\n  // @ts-ignore\n  position: Microsoft.Maps.Location;\n\n  // Output log, printed in the html\n  log: string[] = [];\n\n  constructor(private service: SiteConditionsService) {\n    this.log.push('Constructor');\n  }\n\n  ngOnChanges() {\n    this.log.push('OnChanges');\n  }\n\n  /**\n   * Creates streestide map, sets coordinates\n   */\n  ngAfterViewInit() {\n    this.log.push('AfterViewInit');\n    this.createStreetSideMap();\n    this.service.center$.pipe(\n      // Filters out what it wants, no empty coordinates, take only one\n      filter(coords => !!coords),\n      take(1)\n    ).subscribe(coords => {\n      const [lat, lon] = coords;\n      this.log.push(`Got coords from service: ${coords}`);\n      // @ts-ignore\n      // Creates microsoft position object with the lat and lon from the service\n      const position = new Microsoft.Maps.Location(lat, lon);\n      // Sets view of streetside map\n      this.streetsideMap.setView({ center: position });\n      this.log.push(`current Center: ${this.streetsideMap.getCenter()}`);\n    });\n  }\n\n  /**\n   * Creates streetside maps using Microsoft maps object\n   */\n  createStreetSideMap() {\n    // @ts-ignore\n    this.streetsideMap = new Microsoft.Maps.Map(\n      this.streetsideMapViewChild.nativeElement,\n      {\n        // @ts-ignore\n        credentials: 'AukHSv0yxiZQnvbYs4szic5RfGEmKxhaSLCmRZ5PV8UmgQWI11uH2Mo5_sWDh8l8',\n        // @ts-ignore\n        center: new Microsoft.Maps.Location(51.50632, -0.12714),\n        // @ts-ignore\n        mapTypeId: Microsoft.Maps.MapTypeId.aerial,\n        zoom: 10\n      }\n    );\n  }\n\n  /**\n   * Returns whether or not the log exists, if it does, it'll be printed\n   */\n  hasLogEntries() {\n    return this.log.length > 0;\n  }\n}\n\n\n    \n\n    \n        Lifecycle log:\n\n  {{entry}}\n\n  \n\n    \n\n    \n                \n                    ./bing-map.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Lifecycle log:  {{entry}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BingMapComponent', 'selector': 'app-bing-map'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BingMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BrowserWindowRef.html":{"url":"classes/BrowserWindowRef.html","title":"class - BrowserWindowRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BrowserWindowRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/window.service.ts\n        \n\n            \n                Description\n            \n            \n                Define class that implements the abstract class and returns the native window object.\nAlden I know you don't know what this is, look up class extensions\n\n            \n\n            \n                Extends\n            \n            \n                        WindowRef\n            \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nativeWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/window.service.ts:26\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeWindow\n                    \n                \n\n                \n                    \n                        getnativeWindow()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/window.service.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { ClassProvider, FactoryProvider, InjectionToken, PLATFORM_ID } from '@angular/core';\n\n// This file handles all the window referencing operations, Alden I know you don't know what any of this is, either research or ignore\n\n/**\n *  Create a new injection token for injecting the window into a component.\n */\nexport const WINDOW = new InjectionToken('WindowToken');\n\n/**\n *  Define abstract class for obtaining reference to the global window object.\n */\nexport abstract class WindowRef {\n\n  get nativeWindow(): Window | object {\n    throw new Error('Not implemented.');\n  }\n\n}\n\n/**\n * Define class that implements the abstract class and returns the native window object.\n * Alden I know you don't know what this is, look up class extensions\n */\nexport class BrowserWindowRef extends WindowRef {\n\n  constructor() {\n    super();\n  }\n\n  get nativeWindow(): Window | object {\n    return window;\n  }\n\n}\n\n/**\n * Create an factory function that returns the native window object.\n * @params BrowserWindowRef, platformID\n * @returns Native window object\n */\nexport function windowFactory(browserWindowRef: BrowserWindowRef, platformId: object): Window | object {\n  if (isPlatformBrowser(platformId)) {\n    return browserWindowRef.nativeWindow;\n  }\n  return {};\n}\n\n/**\n * Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class.\n */\nconst browserWindowProvider: ClassProvider = {\n  provide: WindowRef,\n  useClass: BrowserWindowRef\n};\n\n/**\n * Create an injectable provider that uses the windowFactory function for returning the native window object.\n */\nconst windowProvider: FactoryProvider = {\n  provide: WINDOW,\n  useFactory: windowFactory,\n  deps: [ WindowRef, PLATFORM_ID ]\n};\n\n/**\n * Create an array of providers\n */\nexport const WINDOW_PROVIDERS = [\n  browserWindowProvider,\n  windowProvider\n];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SiteConditionsService.html":{"url":"injectables/SiteConditionsService.html","title":"injectable - SiteConditionsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SiteConditionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/site-conditions.service.ts\n        \n\n            \n                Description\n            \n            \n                Conditions of coordinates, mocks getting coordinates from HTTP service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                center$\n                            \n                            \n                                heading\n                            \n                            \n                                heading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialCenter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/site-conditions.service.ts:16\n                            \n                        \n\n                \n                    \n                            Run on program startup, gets initial center and sets it to center$\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialCenter(reportId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/site-conditions.service.ts:38\n                \n            \n\n\n            \n                \n                    Mocks getting HTTP data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    reportId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        would be id for http request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The center as a promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([41.49871231510167, -72.95581850473526])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/site-conditions.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.center.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/site-conditions.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/site-conditions.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.heading.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/site-conditions.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, BehaviorSubject, from } from 'rxjs';\nimport { map, switchMap, take, delay } from 'rxjs/operators';\n\n/**\n * Conditions of coordinates, mocks getting coordinates from HTTP service\n */\n@Injectable()\nexport class SiteConditionsService {\n  center: BehaviorSubject = new BehaviorSubject([41.49871231510167, -72.95581850473526]); // doesn't work\n  heading = new BehaviorSubject(0);\n\n  center$ = this.center.asObservable(); // Reference {@link BingMapComponent}\n  heading$ = this.heading.asObservable();\n\n  /**\n   * Run on program startup, gets initial center and sets it to center$\n   */\n  constructor() {\n    // this.route.params.pipe(\n    //   take(1),\n    //   switchMap(params => this.getInitialCenter(+params.id))\n    // ).subscribe(initialCenter => {\n    //   this.center.next(initialCenter);\n    // });\n    this.getInitialCenter(0).subscribe(initialCenter => {\n      this.center.next(initialCenter);\n    });\n  }\n\n  /**\n   * Mocks getting HTTP data\n   * @param reportId would be id for http request\n   * @returns The center as a promise\n   */\n  getInitialCenter(reportId): Observable {\n    // would come from HTTP service\n    const center = [41.49871231510167, -72.95581850473526];\n    return from([center]).pipe(delay(2000));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WindowRef.html":{"url":"classes/WindowRef.html","title":"class - WindowRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WindowRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/window.service.ts\n        \n\n            \n                Description\n            \n            \n                Define abstract class for obtaining reference to the global window object.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nativeWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeWindow\n                    \n                \n\n                \n                    \n                        getnativeWindow()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/window.service.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { ClassProvider, FactoryProvider, InjectionToken, PLATFORM_ID } from '@angular/core';\n\n// This file handles all the window referencing operations, Alden I know you don't know what any of this is, either research or ignore\n\n/**\n *  Create a new injection token for injecting the window into a component.\n */\nexport const WINDOW = new InjectionToken('WindowToken');\n\n/**\n *  Define abstract class for obtaining reference to the global window object.\n */\nexport abstract class WindowRef {\n\n  get nativeWindow(): Window | object {\n    throw new Error('Not implemented.');\n  }\n\n}\n\n/**\n * Define class that implements the abstract class and returns the native window object.\n * Alden I know you don't know what this is, look up class extensions\n */\nexport class BrowserWindowRef extends WindowRef {\n\n  constructor() {\n    super();\n  }\n\n  get nativeWindow(): Window | object {\n    return window;\n  }\n\n}\n\n/**\n * Create an factory function that returns the native window object.\n * @params BrowserWindowRef, platformID\n * @returns Native window object\n */\nexport function windowFactory(browserWindowRef: BrowserWindowRef, platformId: object): Window | object {\n  if (isPlatformBrowser(platformId)) {\n    return browserWindowRef.nativeWindow;\n  }\n  return {};\n}\n\n/**\n * Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class.\n */\nconst browserWindowProvider: ClassProvider = {\n  provide: WindowRef,\n  useClass: BrowserWindowRef\n};\n\n/**\n * Create an injectable provider that uses the windowFactory function for returning the native window object.\n */\nconst windowProvider: FactoryProvider = {\n  provide: WINDOW,\n  useFactory: windowFactory,\n  deps: [ WindowRef, PLATFORM_ID ]\n};\n\n/**\n * Create an array of providers\n */\nexport const WINDOW_PROVIDERS = [\n  browserWindowProvider,\n  windowProvider\n];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/bing-map/bing-map.component.ts\n            \n            component\n            BingMapComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/services/bing-api-loader.service.ts\n            \n            injectable\n            BingApiLoaderService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/services/site-conditions.service.ts\n            \n            injectable\n            SiteConditionsService\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/services/window.service.ts\n            \n            class\n            BrowserWindowRef\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/services/window.service.ts\n            \n            class\n            WindowRef\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/window.service.ts\n            \n            function\n            windowFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/window.service.ts\n            \n            variable\n            browserWindowProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/window.service.ts\n            \n            variable\n            WINDOW\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/window.service.ts\n            \n            variable\n            WINDOW_PROVIDERS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/window.service.ts\n            \n            variable\n            windowProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.5\n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ~7.3.7\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @types/bingmaps : 0.0.1\n        \n            bingmaps : ^2.0.3\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            windowFactory   (src/.../window.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/window.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            windowFactory\n                        \n                        \n                    \n                \n            \n            \n                \nwindowFactory(browserWindowRef, platformId)\n                \n            \n\n\n\n\n            \n                \n                    Create an factory function that returns the native window object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    browserWindowRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platformId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Window | object\n\n                    \n                    \n                        Native window object\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nBioseerWebInterface\nThis project was generated with Angular CLI version 7.3.9.\nBuilt off of this angular project that incorporated bing maps.\nDocumented using compodoc. Before every push to master, run npm run doc to build docs for github pages.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBingMapComponent\n\nBingMapComponent\n\nAppModule -->\n\nBingMapComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBingApiLoaderService\n\nBingApiLoaderService\n\nAppModule -->\n\nBingApiLoaderService->AppModule\n\n\n\n\n\nSiteConditionsService\n\nSiteConditionsService\n\nAppModule -->\n\nSiteConditionsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            browserWindowProvider   (src/.../window.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            WINDOW   (src/.../window.service.ts)\n                        \n                        \n                            WINDOW_PROVIDERS   (src/.../window.service.ts)\n                        \n                        \n                            windowProvider   (src/.../window.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/window.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            browserWindowProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: WindowRef,\n  useClass: BrowserWindowRef\n}\n                        \n                    \n\n                \n                    \n                        Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WINDOW\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('WindowToken')\n                        \n                    \n\n                \n                    \n                        Create a new injection token for injecting the window into a component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WINDOW_PROVIDERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  browserWindowProvider,\n  windowProvider\n]\n                        \n                    \n\n                \n                    \n                        Create an array of providers\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windowProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FactoryProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: WINDOW,\n  useFactory: windowFactory,\n  deps: [ WindowRef, PLATFORM_ID ]\n}\n                        \n                    \n\n                \n                    \n                        Create an injectable provider that uses the windowFactory function for returning the native window object.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
